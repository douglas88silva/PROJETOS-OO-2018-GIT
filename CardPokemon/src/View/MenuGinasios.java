/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import static View.TelaPrincipal.batalhaPokemon;
import static View.TelaPrincipal.menu;
import cardPokemon.CarD;
import cardPokemon.Duelo;

import cardPokemon.Ginasio;
import cardPokemon.Jogador;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;



/**
 *
 * @author douglas.silva
 */
public class MenuGinasios extends javax.swing.JInternalFrame {

    /**
     * Creates new form MenuGinasios
     */
    private List<Jogador> treinadores;
    private List<Ginasio>listaGinasios;
    
    public MenuGinasios() {
        
        this.listaGinasios = batalhaPokemon.getGinasios();
        
         initComponents();
         this.carregarComboBox();
         
         
    }
    
    
    public void carregarComboBox()
    {
        
        DefaultComboBoxModel comboModelGinasio = (DefaultComboBoxModel)this.jComboBox1.getModel();
        comboModelGinasio.removeAllElements();
   
           comboModelGinasio.addElement("---Selecione um Ginasio---");
           for (Ginasio ginasio : listaGinasios)
           {
              comboModelGinasio.addElement(ginasio);
              
           } 
    }
    
    public void carregarJTable()
    {
       try{
           
               Ginasio g  = (Ginasio) this.jComboBox1.getSelectedItem();
               if(!this.jComboBox1.getSelectedItem().equals("---Selecione um Ginasio---")){
                   
                    this.jLabel3.setText(Integer.toString(g.getNivel()));
                    this.treinadores = g.getAdversarios();

                    TabelaGinasio model = new TabelaGinasio(this.treinadores);
                    this.jTable1.setModel(model);  
                   
               }

               
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null, "erro a" + e);
       }
          
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jButton1.setText("BATALHAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pokemon", "Vida", "Ataque"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText(" Level:");

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );

        jButton2.setText("VOLTAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Ginasios");

        jLabel3.setText("Oponente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(38, 38, 38)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        this.batalharView((Ginasio) jComboBox1.getSelectedItem());
        JOptionPane.showMessageDialog(null, "Fim da batalha");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
                this.setVisible(false);
                menu.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
        if(!this.jComboBox1.getSelectedItem().equals("---Selecione um Ginasio---"));
            this.carregarJTable();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    void batalharView(Ginasio g)
    {
        //INICIAR A BATALHA
        System.out.println("\ns#### ENTRANDO NO GINASIO " +g.getNome()+" ####");

        for(int i = 0;i<g.getAdversarios().size();i++){
           System.out.println("###################################### DUELO ##########################################");
           System.out.println(
                   "["+batalhaPokemon.getPlayer().getNome()+" - "+batalhaPokemon.getPlayer().getPokemonPrincipal().getNome()+"] "
                   +"X"
                   + " ["+g.getAdversarios().get(i).getNome()+" - "+g.getAdversarios().get(i).getPokemonPrincipal().getNome()+"]");
           
           System.out.println("############");

           //Main.pausarAplicacao();
           Duelo combate = new Duelo(batalhaPokemon.getPlayer(),g.getAdversarios().get(i));
           combate.duelarInstantaneo();
           
           if(combate.getVencedor() != -1)
           {
               if(combate.getVencedor()==1)
               {
                   System.out.println("Parabens você venceu a batalha!");
                   JOptionPane.showMessageDialog(null, "Parabens você venceu a batalha!");
                   batalhaPokemon.getPlayer().getCardPrincipal().addExperiencia(batalhaPokemon.getExpericenciaPorVitoria(), (ArrayList<CarD>)batalhaPokemon.getCartasDisponiveis());
                   //Main.pausarAplicacao();

               }
               else if(combate.getVencedor()==0)
               {
                   System.out.println("\nQue pena, voce foi derrotado adversario "+ g.getAdversarios().get(i).getNome());
                   JOptionPane.showMessageDialog(null, "\nQue pena, voce foi derrotado adversario "+ g.getAdversarios().get(i).getNome());
                   batalhaPokemon.getPlayer().getCardPrincipal().addExperiencia(((int)-batalhaPokemon.getExpericenciaPorVitoria()/4), (ArrayList<CarD>)batalhaPokemon.getCartasDisponiveis());

                  // Main.pausarAplicacao();
                   break;
               }
           }
            if(combate.getVencedor()==1 && i == g.getAdversarios().size()-1)
            {
                System.out.println("Parabens você venceu todos os adversarios!");
                JOptionPane.showMessageDialog(null, "Parabens você venceu todos os adversarios!");
               // Main.pausarAplicacao(); 
                this.premioVitoriaInstatanea(g.getAdversarios());
            }
           // Main.pausarAplicacao();
        }
    }
    
    public void premioVitoriaInstatanea(List<Jogador> adversarios) {
            Random r = new Random();
                  batalhaPokemon.getPlayer().addDeckPokemon(adversarios.get(r.nextInt(adversarios.size())).getCardPrincipal().createNewCardPokemon());
         
    }
   
   
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
